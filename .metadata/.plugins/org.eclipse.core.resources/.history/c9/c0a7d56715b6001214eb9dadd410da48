package exam.shibuki.cfroom;

import static org.apache.mina.statemachine.event.IoHandlerEvents.MESSAGE_RECEIVED;

import java.util.Collection;

import org.apache.mina.core.service.IoHandlerAdapter;
import org.apache.mina.core.session.IdleStatus;
import org.apache.mina.core.session.IoSession;
import org.apache.mina.statemachine.annotation.IoHandlerTransition;
import org.apache.mina.statemachine.annotation.State;
import org.apache.mina.statemachine.context.AbstractStateContext;
import org.apache.mina.statemachine.event.Event;


public class CfRoomServerHandler extends IoHandlerAdapter {
	@State public static final String ROOT = "root";
	@State(ROOT) public static final String NOT_CONNECTED = "NotConnected";
	@State(ROOT) public static final String IDLE = "Idle";
	@State(ROOT) public static final String CREATE_ROOM = "CreateRoom";
	@State(ROOT) public static final String MEETING = "Meeting";
	@State(ROOT) public static final String JOIN_ROOM = "JoinRoom";
	
	@IoHandlerTransition(in = ROOT, weight = 100) 
	public void unhandledEvent(Event event) { 
		System.out.println("Warning..");
	} 
	
	@Override
	public void exceptionCaught(IoSession ssn, Throwable cause) throws Exception {
		cause.printStackTrace();
	}
	
	@IoHandlerTransition(on = MESSAGE_RECEIVED, in = NOT_CONNECTED)
	public void Login(ConfRoomContext context, IoSession ssn, Object message) throws Exception {
		//UserInfo userInfo = (UserInfo)message;
		//System.out.println("UserName: " + userInfo.getUserName());
		//System.out.println("Password: " + userInfo.getPassword());
		System.out.println((String)message);
		ssn.write((String)message);

		//sessionIDŽæ“¾
		long id = ssn.getId();
		
		//Date date = new Date();
		Collection<IoSession> ssns = ssn.getService().getManagedSessions().values();
		for(IoSession issns : ssns) {
			if(issns.getId() != id)
				issns.write((String)message);
		}
	}
	/*
	@IoHandlerTransition(on = MESSAGE_RECEIVED, in = CONNECTED)
	public void notFirstConnect(ConfRoomContext myContext, IoSession ssn, Object message) throws Exception {
		String str = message.toString();
		System.out.println("Message read:");
		System.out.println(str);
		
		//sessionIDŽæ“¾
		long id = ssn.getId();
		
		//Date date = new Date();
		Collection<IoSession> ssns = ssn.getService().getManagedSessions().values();
		for(IoSession issns : ssns) {
			if(issns.getId() != id)
				issns.write(String.format("%d : %s(i am a old man!)",id,  message));
		}
		//ssn.write(date.toString());
		System.out.println("Message written...");
		//Thread.sleep(10000);
		//ssn.close(true);
		System.out.println("contextName" + myContext.contextName);
	}*/
	
	@Override
	public void sessionIdle(IoSession ssn, IdleStatus status) throws Exception{
		System.out.println("IDLE " + ssn.getIdleCount(status));
	}
	
	static class ConfRoomContext extends AbstractStateContext {   
	    public String contextName;   
	}
}